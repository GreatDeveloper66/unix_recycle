#!/bin/bash
#check for correct number of arguments
hidden_file=".restore.info"

function storefile() {

        #move to orginal directory-if hidden file does not exist create it.
        cd $2
        if ! [ -e $hidden_file ]
        then
                touch $hidden_file
        fi

        echo "$1:$2" >> $hidden_file

}

function recyclefile() {
        #if recycle bin directory does not exist create it.
        local rbindir="recyclebin"
        if ! [[ -e $rbindir && -d $rbindir ]]
        then
                mkdir recyclebin
        fi

  #create new file name from iode number
        local iode=$(ls -i $1 | cut -d" " -f1)
        local nfn="$1_$iode"

        #move file to recycle bin
        mv $1 $rbindir
        cd $rbindir
        mv $1 $nfn
        cd ..

        local abspath=$(pwd)

        storefile $nfn $abspath
        return 0
}





if [ $# -eq 0 ] #give missing operand warning for no arguments
then
        echo "recycle: missing operand"
        echo "Try 'recycle --help' for more information"
        exit 1
elif [ $# -eq 1 ] #one argument is given-handle find and recycling file
then
        if [ -e $1 ] #does the file exist?
        then
                if [ -d $1 ] #is it a directory?
                then
                        echo "recycle: cannot remove '$1': Is a directory"
                        exit 1
                else
                        if [ $1 = "recycle" ]
                        then
                                echo "Attempting to delete recycle - operation aborted"
                                exit 1
                        else
                                echo "it is a proper file"
                                recyclefile $1
                                exit 0
                        fi
                fi
        else
                echo "recycle: cannot remove '$1': No such file or directory"
                exit 1
        fi
else #too many arguments-can't handle this yet
        echo "Wrong number of arguments. We will have to wait for phase 3 to handle this!"
        exit 1
fi

#if find $1 > /dev/null 2>&1
